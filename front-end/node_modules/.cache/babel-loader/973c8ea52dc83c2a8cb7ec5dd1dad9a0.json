{"ast":null,"code":"'use strict';\n\nfunction _interopDefault(ex) {\n  return ex && typeof ex === 'object' && 'default' in ex ? ex['default'] : ex;\n}\n\nvar _Object$getPrototypeOf = _interopDefault(require('babel-runtime/core-js/object/get-prototype-of'));\n\nvar _classCallCheck = _interopDefault(require('babel-runtime/helpers/classCallCheck'));\n\nvar _createClass = _interopDefault(require('babel-runtime/helpers/createClass'));\n\nvar _possibleConstructorReturn = _interopDefault(require('babel-runtime/helpers/possibleConstructorReturn'));\n\nvar _inherits = _interopDefault(require('babel-runtime/helpers/inherits'));\n\nvar React = require('react');\n\nvar React__default = _interopDefault(React);\n\nfunction addEvent(event, cb) {\n  window.addEventListener(event, cb, false);\n  return function () {\n    return window.removeEventListener(event, cb, false);\n  };\n}\n\nvar _class;\n\nvar _temp2;\n\nvar noop = function noop() {};\n\nvar ReactStickyHeader = (_temp2 = _class = function (_Component) {\n  _inherits(ReactStickyHeader, _Component);\n\n  function ReactStickyHeader() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, ReactStickyHeader);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = ReactStickyHeader.__proto__ || _Object$getPrototypeOf(ReactStickyHeader)).call.apply(_ref, [this].concat(args))), _this), _this._detatch = noop, _this._rafExecuting = false, _this.state = {\n      isSticky: _this.props.headerOnly\n    }, _this.calculateStickyState = function () {\n      if (_this._rafExecuting) {\n        return;\n      }\n\n      _this._rafExecuting = true;\n      requestAnimationFrame(function () {\n        var stickyHeaderHeight = _this._fixed.offsetHeight;\n        var headerContainer = _this._root.offsetHeight;\n\n        var headerContainerBoundingBox = _this._root.getBoundingClientRect();\n\n        var stickyOffset = _this.props.stickyOffset;\n        var pastStickyThreshold = headerContainer + headerContainerBoundingBox.top - stickyHeaderHeight <= (stickyOffset || 0);\n\n        if (pastStickyThreshold && !_this.state.isSticky) {\n          _this.setState({\n            isSticky: true\n          });\n\n          _this.props.onSticky(true);\n        } else if (!pastStickyThreshold && _this.state.isSticky) {\n          _this.setState({\n            isSticky: false\n          });\n\n          _this.props.onSticky(false);\n        }\n\n        _this._rafExecuting = false;\n      });\n    }, _this.onResize = function () {\n      // We want to flush a re-render incase the children have changed size from CSS.\n      _this.setState({}); // We want to check if because of a resize the header is now sticky or not.\n\n\n      _this.calculateStickyState();\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  } // eslint-disable-next-line react/sort-comp\n\n\n  _createClass(ReactStickyHeader, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this.initialise(); // Force state change as we need to calculate the header background containers.\n      // eslint-disable-next-line react/no-did-mount-set-state\n\n      this.setState({});\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      this._detatch();\n    }\n  }, {\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(nextProps) {\n      if (nextProps.headerOnly !== this.props.headerOnly) {\n        this.calculateStickyState();\n      }\n    }\n  }, {\n    key: 'initialise',\n    value: function initialise() {\n      var _this2 = this;\n\n      if (this._initialised) {\n        return;\n      }\n\n      var detatchScroll = addEvent('scroll', this.calculateStickyState);\n      var detatchResize = addEvent('resize', this.onResize);\n\n      this._detatch = function () {\n        [detatchScroll, detatchResize].forEach(function (detatch) {\n          return detatch();\n        });\n        _this2._initialised = false;\n      };\n\n      this.calculateStickyState();\n      this._initialised = true;\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this3 = this;\n\n      var backgroundUrl = this.props.backgroundImage && 'url(\\'' + this.props.backgroundImage + '\\')';\n      var headerClassName = 'ReactStickyHeader_root' + (this.props.className ? ' ' + this.props.className : '');\n      var rootClassName = '' + headerClassName + (this.state.isSticky ? ' is-sticky' : '');\n      var headerContainerHeight = this._root && this._root.offsetHeight;\n      var fixedHeaderHeight = this._fixed && this._fixed.offsetHeight;\n      return React__default.createElement('header', {\n        className: rootClassName,\n        ref: function ref(e) {\n          return _this3._root = e;\n        }\n      }, React__default.createElement('div', {\n        className: 'ReactStickyHeader_fixed',\n        ref: function ref(e) {\n          return _this3._fixed = e;\n        }\n      }, this.props.header), React__default.createElement('div', {\n        className: 'ReactStickyHeader_midground',\n        style: {\n          height: headerContainerHeight || fixedHeaderHeight,\n          top: fixedHeaderHeight,\n          backgroundImage: backgroundUrl,\n          backgroundColor: this.props.backgroundColor\n        }\n      }), this.props.headerOnly && React__default.createElement('div', {\n        style: {\n          height: fixedHeaderHeight\n        }\n      }), this.props.headerOnly || React__default.createElement('div', {\n        className: 'ReactStickyHeader_background-bg',\n        style: {\n          backgroundImage: backgroundUrl,\n          backgroundColor: this.props.backgroundColor\n        }\n      }), this.props.headerOnly || React__default.createElement('div', {\n        className: 'ReactStickyHeader_foreground',\n        style: {\n          opacity: this.state.isSticky ? 0 : 1,\n          backgroundImage: backgroundUrl,\n          backgroundColor: this.props.backgroundColor\n        }\n      }), this.props.headerOnly || this.props.children);\n    }\n  }]);\n\n  return ReactStickyHeader;\n}(React.Component), _class.defaultProps = {\n  onSticky: noop,\n  headerOnly: false\n}, _temp2);\nmodule.exports = ReactStickyHeader;","map":{"version":3,"sources":["../src/utils.js","../src/ReactStickyHeader.js"],"names":["window","noop","ReactStickyHeader","Component","_detatch","_rafExecuting","defaultProps","state","headerOnly","nextProps","calculateStickyState","stickyHeaderHeight","headerContainer","headerContainerBoundingBox","stickyOffset","pastStickyThreshold","onResize","detatchScroll","addEvent","detatchResize","detatch","backgroundUrl","headerClassName","rootClassName","headerContainerHeight","fixedHeaderHeight","header","backgroundColor","React","height","backgroundImage","opacity","children"],"mappings":"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","sourcesContent":["// @flow\n\nexport function addEvent (event: string, cb: Function) {\n  window.addEventListener(event, cb, false);\n  return () => window.removeEventListener(event, cb, false);\n}\n","// @flow\n\nimport type { Children } from 'react';\nimport React, { Component } from 'react';\nimport { addEvent } from './utils';\n\nconst noop: any = () => {};\n\ntype Props = {\n  onSticky: (isSticky: boolean) => void,\n  header: Children,\n  headerOnly: boolean,\n  children?: Children,\n  backgroundImage?: string,\n  backgroundColor?: string,\n  className?: string,\n  stickyOffset?: number,\n};\n\nexport default class ReactStickyHeader extends Component {\n  // eslint-disable-next-line react/sort-comp\n  props: Props;\n  _detatch: () => void = noop;\n  _initialised: boolean;\n  _fixed: HTMLElement;\n  _root: HTMLElement;\n  _rafExecuting = false;\n\n  static defaultProps = {\n    onSticky: noop,\n    headerOnly: false,\n  };\n\n  state = {\n    isSticky: this.props.headerOnly,\n  };\n\n  componentDidMount () {\n    this.initialise();\n    // Force state change as we need to calculate the header background containers.\n    // eslint-disable-next-line react/no-did-mount-set-state\n    this.setState({});\n  }\n\n  componentWillUnmount () {\n    this._detatch();\n  }\n\n  componentWillReceiveProps (nextProps: Props) {\n    if (nextProps.headerOnly !== this.props.headerOnly) {\n      this.calculateStickyState();\n    }\n  }\n\n  calculateStickyState = () => {\n    if (this._rafExecuting) {\n      return;\n    }\n\n    this._rafExecuting = true;\n\n    requestAnimationFrame(() => {\n      const stickyHeaderHeight = this._fixed.offsetHeight;\n      const headerContainer = this._root.offsetHeight;\n      const headerContainerBoundingBox = this._root.getBoundingClientRect();\n      const stickyOffset = this.props.stickyOffset;\n      const pastStickyThreshold = ((headerContainer + headerContainerBoundingBox.top) - stickyHeaderHeight) <= (stickyOffset || 0);\n\n      if (pastStickyThreshold && !this.state.isSticky) {\n        this.setState({\n          isSticky: true,\n        });\n\n        this.props.onSticky(true);\n      } else if (!pastStickyThreshold && this.state.isSticky) {\n        this.setState({\n          isSticky: false,\n        });\n\n        this.props.onSticky(false);\n      }\n\n      this._rafExecuting = false;\n    });\n  };\n\n  onResize = () => {\n    // We want to flush a re-render incase the children have changed size from CSS.\n    this.setState({});\n\n    // We want to check if because of a resize the header is now sticky or not.\n    this.calculateStickyState();\n  };\n\n  initialise () {\n    if (this._initialised) {\n      return;\n    }\n\n    const detatchScroll = addEvent('scroll', this.calculateStickyState);\n    const detatchResize = addEvent('resize', this.onResize);\n\n    this._detatch = () => {\n      [detatchScroll, detatchResize].forEach((detatch) => detatch());\n      this._initialised = false;\n    };\n\n    this.calculateStickyState();\n    this._initialised = true;\n  }\n\n  render () {\n    const backgroundUrl = this.props.backgroundImage && `url('${this.props.backgroundImage}')`;\n    const headerClassName = `ReactStickyHeader_root${this.props.className ? ` ${this.props.className}` : ''}`;\n    const rootClassName = `${headerClassName}${this.state.isSticky ? ' is-sticky' : ''}`;\n    const headerContainerHeight = this._root && this._root.offsetHeight;\n    const fixedHeaderHeight = this._fixed && this._fixed.offsetHeight;\n\n    return (\n      <header className={rootClassName} ref={(e) => (this._root = e)}>\n        <div className=\"ReactStickyHeader_fixed\" ref={(e) => (this._fixed = e)}>\n          {this.props.header}\n        </div>\n\n        <div\n          className=\"ReactStickyHeader_midground\"\n          style={{\n            height: headerContainerHeight || fixedHeaderHeight,\n            top: fixedHeaderHeight,\n            backgroundImage: backgroundUrl,\n            backgroundColor: this.props.backgroundColor,\n          }}\n        />\n\n        {this.props.headerOnly && <div style={{ height: fixedHeaderHeight }} />}\n\n        {this.props.headerOnly || (\n          <div\n            className=\"ReactStickyHeader_background-bg\"\n            style={{ backgroundImage: backgroundUrl, backgroundColor: this.props.backgroundColor }}\n          />\n        )}\n\n        {this.props.headerOnly || (\n          <div\n            className=\"ReactStickyHeader_foreground\"\n            style={{ opacity: this.state.isSticky ? 0 : 1, backgroundImage: backgroundUrl, backgroundColor: this.props.backgroundColor }}\n          />\n        )}\n\n        {this.props.headerOnly || this.props.children}\n      </header>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"script"}