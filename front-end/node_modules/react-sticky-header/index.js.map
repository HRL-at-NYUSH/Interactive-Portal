{"version":3,"file":"index.js","sources":["../src/utils.js","../src/ReactStickyHeader.js"],"sourcesContent":["// @flow\n\nexport function addEvent (event: string, cb: Function) {\n  window.addEventListener(event, cb, false);\n  return () => window.removeEventListener(event, cb, false);\n}\n","// @flow\n\nimport type { Children } from 'react';\nimport React, { Component } from 'react';\nimport { addEvent } from './utils';\n\nconst noop: any = () => {};\n\ntype Props = {\n  onSticky: (isSticky: boolean) => void,\n  header: Children,\n  headerOnly: boolean,\n  children?: Children,\n  backgroundImage?: string,\n  backgroundColor?: string,\n  className?: string,\n  stickyOffset?: number,\n};\n\nexport default class ReactStickyHeader extends Component {\n  // eslint-disable-next-line react/sort-comp\n  props: Props;\n  _detatch: () => void = noop;\n  _initialised: boolean;\n  _fixed: HTMLElement;\n  _root: HTMLElement;\n  _rafExecuting = false;\n\n  static defaultProps = {\n    onSticky: noop,\n    headerOnly: false,\n  };\n\n  state = {\n    isSticky: this.props.headerOnly,\n  };\n\n  componentDidMount () {\n    this.initialise();\n    // Force state change as we need to calculate the header background containers.\n    // eslint-disable-next-line react/no-did-mount-set-state\n    this.setState({});\n  }\n\n  componentWillUnmount () {\n    this._detatch();\n  }\n\n  componentWillReceiveProps (nextProps: Props) {\n    if (nextProps.headerOnly !== this.props.headerOnly) {\n      this.calculateStickyState();\n    }\n  }\n\n  calculateStickyState = () => {\n    if (this._rafExecuting) {\n      return;\n    }\n\n    this._rafExecuting = true;\n\n    requestAnimationFrame(() => {\n      const stickyHeaderHeight = this._fixed.offsetHeight;\n      const headerContainer = this._root.offsetHeight;\n      const headerContainerBoundingBox = this._root.getBoundingClientRect();\n      const stickyOffset = this.props.stickyOffset;\n      const pastStickyThreshold = ((headerContainer + headerContainerBoundingBox.top) - stickyHeaderHeight) <= (stickyOffset || 0);\n\n      if (pastStickyThreshold && !this.state.isSticky) {\n        this.setState({\n          isSticky: true,\n        });\n\n        this.props.onSticky(true);\n      } else if (!pastStickyThreshold && this.state.isSticky) {\n        this.setState({\n          isSticky: false,\n        });\n\n        this.props.onSticky(false);\n      }\n\n      this._rafExecuting = false;\n    });\n  };\n\n  onResize = () => {\n    // We want to flush a re-render incase the children have changed size from CSS.\n    this.setState({});\n\n    // We want to check if because of a resize the header is now sticky or not.\n    this.calculateStickyState();\n  };\n\n  initialise () {\n    if (this._initialised) {\n      return;\n    }\n\n    const detatchScroll = addEvent('scroll', this.calculateStickyState);\n    const detatchResize = addEvent('resize', this.onResize);\n\n    this._detatch = () => {\n      [detatchScroll, detatchResize].forEach((detatch) => detatch());\n      this._initialised = false;\n    };\n\n    this.calculateStickyState();\n    this._initialised = true;\n  }\n\n  render () {\n    const backgroundUrl = this.props.backgroundImage && `url('${this.props.backgroundImage}')`;\n    const headerClassName = `ReactStickyHeader_root${this.props.className ? ` ${this.props.className}` : ''}`;\n    const rootClassName = `${headerClassName}${this.state.isSticky ? ' is-sticky' : ''}`;\n    const headerContainerHeight = this._root && this._root.offsetHeight;\n    const fixedHeaderHeight = this._fixed && this._fixed.offsetHeight;\n\n    return (\n      <header className={rootClassName} ref={(e) => (this._root = e)}>\n        <div className=\"ReactStickyHeader_fixed\" ref={(e) => (this._fixed = e)}>\n          {this.props.header}\n        </div>\n\n        <div\n          className=\"ReactStickyHeader_midground\"\n          style={{\n            height: headerContainerHeight || fixedHeaderHeight,\n            top: fixedHeaderHeight,\n            backgroundImage: backgroundUrl,\n            backgroundColor: this.props.backgroundColor,\n          }}\n        />\n\n        {this.props.headerOnly && <div style={{ height: fixedHeaderHeight }} />}\n\n        {this.props.headerOnly || (\n          <div\n            className=\"ReactStickyHeader_background-bg\"\n            style={{ backgroundImage: backgroundUrl, backgroundColor: this.props.backgroundColor }}\n          />\n        )}\n\n        {this.props.headerOnly || (\n          <div\n            className=\"ReactStickyHeader_foreground\"\n            style={{ opacity: this.state.isSticky ? 0 : 1, backgroundImage: backgroundUrl, backgroundColor: this.props.backgroundColor }}\n          />\n        )}\n\n        {this.props.headerOnly || this.props.children}\n      </header>\n    );\n  }\n}\n"],"names":["addEvent","event","cb","addEventListener","window","removeEventListener","noop","ReactStickyHeader","_detatch","_rafExecuting","state","props","headerOnly","calculateStickyState","stickyHeaderHeight","_fixed","offsetHeight","headerContainer","_root","headerContainerBoundingBox","getBoundingClientRect","stickyOffset","pastStickyThreshold","top","isSticky","setState","onSticky","onResize","initialise","nextProps","_initialised","detatchScroll","detatchResize","forEach","detatch","backgroundUrl","backgroundImage","headerClassName","className","rootClassName","headerContainerHeight","fixedHeaderHeight","React","e","header","backgroundColor","height","opacity","children","Component","defaultProps"],"mappings":"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"}